#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define MACRO_PLACEHOLDER 0

// variables
#define HOLD_MS       1000  // time after which hold action is activated
#define QUICK_TAP_MS  301   // time between double-taps that always triggers tap behavior
#define PRIOR_IDLE_MS -1    // time since last non-modifier that disables modifiers
#define TAP_DANCE_MS  1000  // max time between tap-dance taps

// layers
#define BS_L  0
#define NUM_L 1
#define SYM_L 2
#define NAV_L 3
#define FUN_L 4
#define GAM_L 5

// redefines
#define BRIUP C_BRI_UP
#define BRIDN C_BRI_DN
#define VOLUP C_VOL_UP
#define VOLDN C_VOL_DN
#define VMUTE C_MUTE

/ {
    behaviors {
        layer_sticky: layer_sticky {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <HOLD_MS>;
            bindings = <&sl>, <&mo>;
        };

        num: num_layer {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_DANCE_MS>;
            bindings = <&layer_sticky NUM_L NUM_L>, <&to NUM_L>;
        };

        sym: symbol_layer {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_DANCE_MS>;
            bindings = <&layer_sticky SYM_L SYM_L>, <&to SYM_L>;
        };

        nav: nav_layer {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_DANCE_MS>;
            bindings = <&layer_sticky NAV_L NAV_L>, <&to NAV_L>;
        };

        fun: fun_layer {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_DANCE_MS>;
            bindings = <&layer_sticky FUN_L FUN_L>, <&to FUN_L>;
        };

        hrm: home_row_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <HOLD_MS>;
            // quick-tap-ms = <QUICK_TAP_MS>;
            // require-prior-idle-ms = <PRIOR_IDLE_MS>;
            bindings = <&kp>, <&kp>;
        };

        lp: layer_key_press {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <HOLD_MS>;
            // quick-tap-ms = <QUICK_TAP_MS>;
            // require-prior-idle-ms = <PRIOR_IDLE_MS>;
            bindings = <&mo>, <&kp>;
        };
    };

    macros {
        lc: lcontrol_hrm {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to2>, <&hrm LCTRL MACRO_PLACEHOLDER>;
        };
        la: lalt_hrm {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to2>, <&hrm LALT MACRO_PLACEHOLDER>;
        };
        lm: lmeta_hrm {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to2>, <&hrm LMETA MACRO_PLACEHOLDER>;
        };
        ls: lshift_hrm {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to2>, <&hrm LSHFT MACRO_PLACEHOLDER>;
        };
        rc: rcontrol_hrm {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to2>, <&hrm RCTRL MACRO_PLACEHOLDER>;
        };
        ra: ralt_hrm {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to2>, <&hrm RALT MACRO_PLACEHOLDER>;
        };
        rm: rmeta_hrm {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to2>, <&hrm RMETA MACRO_PLACEHOLDER>;
        };
        rs: rshift_hrm {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to2>, <&hrm RSHFT MACRO_PLACEHOLDER>;
        };
    };


    keymap {
        // view with tabstop=10

        compatible = "zmk,keymap";

        base_layer {
            bindings = <
	&none	&kp Q	&kp W	&kp F	&kp P	&kp B		&kp J	&kp L	&kp U	&kp Y	&kp SEMI	&none
	&none	&hrm LCTRL A	&hrm LALT R	&hrm LMETA S	&hrm LSHFT T	&kp G		&kp M	&hrm RSHFT N	&hrm RMETA E	&hrm RALT I	&hrm RCTRL O	&none
	&none	&kp Z	&kp X	&kp C	&kp D	&kp V		&kp K	&kp H	&kp COMMA	&kp DOT	&kp FSLH	&none
				&lp NAV_L BSPC	&lp NUM_L SPACE	&mo FUN_L 		&to BS_L	&key_repeat	&lp SYM_L RET
            >;
        };

        num_layer {
            bindings = <
	&none	&kp Q	&kp W	&kp F	&kp P	&kp B		&kp J	&kp L	&kp U	&kp Y	&kp SEMI	&none
	&none	&hrm LCTRL N1	&hrm LALT N2	&hrm LMETA N3	&hrm LSHFT N4	&kp N5		&kp N6	&hrm RSHFT N7	&hrm RMETA N8	&hrm RALT N9	&hrm RCTRL N0	&none
	&none	&kp Z	&kp X	&kp C	&kp D	&kp V		&kp K	&kp H	&kp COMMA	&kp DOT	&kp FSLH	&none
				&trans	&trans	&trans		&trans	&trans	&trans
            >;
        };

        symbol_layer {
            bindings = <
	&none	&kp SQT	&kp LT 	&kp GT	&kp DQT	&trans		&kp DLLR	&kp UNDER	&kp LBKT	&kp RBKT	&kp PRCNT	&none
	&none	&hrm LCTRL EXCL	&hrm LALT MINUS	&hrm LMETA PLUS	&hrm LSHFT EQUAL	&kp POUND		&kp AMPS	&hrm RSHFT COLON	&hrm RMETA LPAR	&hrm RALT RPAR	&hrm RCTRL QMARK	&none
	&none	&kp CARET	&kp FSLH	&kp STAR	&kp BSLH	&kp GRAVE		&kp PIPE	&kp TILDE	&kp LBRC	&kp RBRC	&kp AT	&none
				&trans	&trans	&trans		&to GAM_L	&trans	&trans
            >;
        };

        nav_layer {
            bindings = <
	&none	&trans	&kp VOLDN	&kp VOLUP	&kp VMUTE	&trans		&trans	&trans	&kp TAB	&kp CAPS	&kp DEL	&none
	&none	&kp LCTRL	&kp LALT	&kp LMETA	&kp LSHFT	&trans		&kp LEFT	&kp DOWN	&kp UP	&kp RIGHT	&kp ESC	&none
	&none	&trans	&kp BRIDN	&kp BRIUP	&trans	&trans		&trans	&kp PG_DN	&kp PG_UP	&kp PG_UP	&kp END	&none
				&trans	&trans	&trans		&trans	&trans	&trans
            >;
        };


        function_layer {
            bindings = <
	&none	&bt BT_SEL 1	&bt BT_SEL 2	&bt BT_SEL 3	&bt BT_SEL 4	&bt BT_CLR		&trans	&trans	&trans	&trans	&trans	&none
	&none	&hrm LCTRL F1	&hrm LALT F2	&hrm LMETA F3	&hrm LSHFT F4	&kp F5		&kp F6	&hrm RSHFT F7	&hrm RMETA F8	&hrm RALT F9	&hrm RCTRL F10	&none
	&none	&kp F11	&kp F12	&kp F13	&kp F14	&kp F15		&kp F16	&kp F17	&kp F18	&kp F19	&kp F20	&none
				&trans	&trans	&trans		&trans	&trans	&trans
            >;
        };

        gaming_layer {
            bindings = <
	&none	&kp Q	&kp W	&kp F	&kp P	&kp B		&kp J	&kp L	&kp U	&kp Y	&kp SEMI	&none
	&none	&kp A	&kp R	&kp S	&kp T	&kp G		&kp M	&kp N	&kp E	&kp I	&kp O	&none
	&none	&kp Z	&kp X	&kp C	&kp D	&kp V		&kp K	&kp H	&kp COMMA	&kp DOT	&kp FSLH	&none
				&kp LSHFT	&kp SPACE	&kp LALT 		&to BS_L	&to BS_L	&lp SYM_L RET
            >;
        };
   };
};
